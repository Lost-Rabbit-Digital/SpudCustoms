# 30 seconds for hard, 45 for normal, 60 for easy
# we can add pressure to the players decision
# based on difficulty level then have an overlay
# pop of supervisor yelling if they take too long

Should also have a timer counting UP as a score

The ideal time for processing a potato through customs should balance engagement, 
challenge, and a sense of urgency without causing frustration. 

Here are some considerations:

1. Game Feel: 
	Aim for a pace that feels brisk and keeps the player engaged, 
	but not so fast that it becomes stressful or impossible to keep up.

2. Difficulty Levels: 
	The time could vary based on difficulty:
   - Easy: 60 seconds
   - Normal: 45 seconds
   - Hard: 30 seconds

3. Learning Curve: 
	New players might need more time initially, 
	so reduce allowed time by 1 second per day as the game progresses in story, 
	and every equivalent of a completed shift in endless challenge or daily mode (resets daily).
	- Easy: Minimum 52 seconds
	- Normal: Minimum 37 seconds
	- Hard: Minimum 22 seconds

4. Mini-game Balance: 
	If you're implementing the frying mini-game, ensure the main game's pace allows for occasional diversion without feeling punitive.

As a starting point, aim for an average of 30 seconds per potato on Normal difficulty. This gives players time to:

1. Read the passport (5-10 seconds)
2. Check against rules (10-15 seconds)
3. Make a decision and stamp (5-10 seconds)
4. Process the result and prepare for the next potato (5-10 seconds)

Timer UI implementation: 
Timer should not start until the first time you hit the megaphone.
Add a shutter roll-up on the first time you hit the megaphone.
Hitting megaphone, opening passport, comparing 3 laws took 19 seconds
on day 1 in easy difficulty.
Add new Label alongside Score, Strikes, Date, Time Left:

```gdscript
var processing_time = 60  # seconds
# Add difficulty max_time_left variable for easy, normal, hard 
# configure this in set_difficulty_level to adjust processing_time, default to easy(60, 45, 30 seconds)
var current_timer = 0

func _process(delta):
	if is_potato_in_office:
		# Show label if potato in customs office
		$"Label (TimeLabel)".visible = true
		current_timer += delta
		# Update _process to change Time Left: display each second after timer incremented
		if current_time < 5: 
			# Tween text in $"Label (TimeLabel)" between font_size 
			# 12 and 16 w/ easing function, flash red
		if current_timer >= processing_time:
			# Implicit rejection of potatos via the process_decision(false) function 
			# carries the risk of accidentally passing a potato and improving player score
			# This should be its' own force_decision(), maybe where the Supervisor says 
			# what the right answer was too before punishing the player.
			# Time's up, force a decision or penalize the player
			force_decision()
	else:
		# Hide label if potato is not in/has left customs office
		$"Label (TimeLabel)".visible = false
		

func force_decision():
	# Implement logic for when time runs out
	pass

func reset_timer():
	current_timer = 0

# Call reset_timer() when a new potato enters the office
```

Remember to playtest extensively and adjust based on player feedback.
The goal is to find a sweet spot where players feel challenged 
but not overwhelmed, and where the game maintains a satisfying rhythm.

This may entail changing the megaphone to ONLY initiate the beginning of day 
shift and then otherwise move the initiation of next potato processing back into
 the process_decision code to enforce a better game flow.
